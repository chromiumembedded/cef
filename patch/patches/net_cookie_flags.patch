diff --git net/base/load_flags_list.h net/base/load_flags_list.h
index 6e118835cc725dec9289811fbbb08410c0852a51..24e5463606f0cc646b74fb1584c2472fe07ef5f6 100644
--- net/base/load_flags_list.h
+++ net/base/load_flags_list.h
@@ -116,4 +116,7 @@ LOAD_FLAG(DISABLE_SHARED_DICTIONARY_AFTER_CROSS_ORIGIN_REDIRECT, 1 << 17)
 // CRL, and OCSP requests in order to prevent circular dependencies.
 LOAD_FLAG(SHOULD_BYPASS_HSTS, 1 << 18)
 
+// This load will not send any cookies. For CEF usage.
+LOAD_FLAG(DO_NOT_SEND_COOKIES, 1 << 19)
+
 // See note at top of file about why adding LoadFlags is often a bad idea.
diff --git net/url_request/url_request_http_job.cc net/url_request/url_request_http_job.cc
index 277089b5023f74963a6f6766a0aeb1eaae771aa0..82b256b8b5ac95734299c8e33244bb0fadd102b7 100644
--- net/url_request/url_request_http_job.cc
+++ net/url_request/url_request_http_job.cc
@@ -2171,7 +2171,8 @@ bool URLRequestHttpJob::ShouldAddCookieHeader() const {
   // Read cookies whenever allow_credentials() is true, even if the PrivacyMode
   // is being overridden by NetworkDelegate and will eventually block them, as
   // blocked cookies still need to be logged in that case.
-  return request_->context()->cookie_store() && request_->allow_credentials();
+  return request_->context()->cookie_store() && request_->allow_credentials() &&
+         !(request_info_.load_flags & LOAD_DO_NOT_SEND_COOKIES);
 }
 
 bool URLRequestHttpJob::ShouldRecordPartitionedCookieUsage() const {
diff --git services/network/cors/cors_url_loader_factory.cc services/network/cors/cors_url_loader_factory.cc
index b7a2795e29d1396fcbc73b86632449e56d267161..efd23544caf00f0a65cc7362b6d57d26336ac970 100644
--- services/network/cors/cors_url_loader_factory.cc
+++ services/network/cors/cors_url_loader_factory.cc
@@ -646,7 +646,8 @@ bool CorsURLLoaderFactory::IsValidRequest(const ResourceRequest& request,
           net::LOAD_DISABLE_CACHE | net::LOAD_PREFETCH |
           net::LOAD_IGNORE_LIMITS | net::LOAD_DO_NOT_USE_EMBEDDED_IDENTITY |
           net::LOAD_SUPPORT_ASYNC_REVALIDATION |
-          net::LOAD_RESTRICTED_PREFETCH_FOR_MAIN_FRAME)) {
+          net::LOAD_RESTRICTED_PREFETCH_FOR_MAIN_FRAME |
+          net::LOAD_DO_NOT_SEND_COOKIES | net::LOAD_DO_NOT_SAVE_COOKIES)) {
       mojo::ReportBadMessage(
           "CorsURLLoaderFactory: Untrusted caller using restricted load flag");
       return false;
diff --git services/network/public/cpp/resource_request.cc services/network/public/cpp/resource_request.cc
index 4c6da7daa167e8e687d43b6c59948fdc694052f7..d18d000347d559c146e6f273223f77f3fa5e3c31 100644
--- services/network/public/cpp/resource_request.cc
+++ services/network/public/cpp/resource_request.cc
@@ -374,7 +374,8 @@ bool ResourceRequest::EqualsForTesting(const ResourceRequest& request) const {
 }
 
 bool ResourceRequest::SendsCookies() const {
-  return credentials_mode == network::mojom::CredentialsMode::kInclude;
+  return credentials_mode == network::mojom::CredentialsMode::kInclude &&
+         !(load_flags & net::LOAD_DO_NOT_SEND_COOKIES);
 }
 
 bool ResourceRequest::SavesCookies() const {
