diff --git ui/gtk/gtk_ui.cc ui/gtk/gtk_ui.cc
index ee5f4cfbda1206c78a692e971884e214e5c5f7d4..b86816b3a4f488f22f6972ed95b50e093aacb9f9 100644
--- ui/gtk/gtk_ui.cc
+++ ui/gtk/gtk_ui.cc
@@ -32,6 +32,7 @@
 #include "base/observer_list.h"
 #include "base/strings/string_number_conversions.h"
 #include "base/strings/string_split.h"
+#include "cef/libcef/features/features.h"
 #include "chrome/browser/themes/theme_properties.h"  // nogncheck
 #include "third_party/skia/include/core/SkBitmap.h"
 #include "third_party/skia/include/core/SkColor.h"
@@ -256,10 +257,15 @@ bool GtkUi::Initialize() {
   };
 
   GtkSettings* settings = gtk_settings_get_default();
+  // Disable GTK theme change notifications because they are extremely slow.
+  // Light/dark theme changes will still be detected via DarkModeManagerLinux.
+  // See https://issues.chromium.org/issues/40280130#comment7
+#if !BUILDFLAG(ENABLE_CEF)
   connect(settings, "notify::gtk-theme-name", &GtkUi::OnThemeChanged);
   connect(settings, "notify::gtk-icon-theme-name", &GtkUi::OnThemeChanged);
   connect(settings, "notify::gtk-application-prefer-dark-theme",
           &GtkUi::OnThemeChanged);
+#endif
   connect(settings, "notify::gtk-cursor-theme-name",
           &GtkUi::OnCursorThemeNameChanged);
   connect(settings, "notify::gtk-cursor-theme-size",
diff --git ui/ozone/platform/x11/ozone_platform_x11.cc ui/ozone/platform/x11/ozone_platform_x11.cc
index 4f00f630665a10a0fb85fe7c2ddc0fa67add1603..0c0408838872a74c4ea87ef75c90506405929857 100644
--- ui/ozone/platform/x11/ozone_platform_x11.cc
+++ ui/ozone/platform/x11/ozone_platform_x11.cc
@@ -64,6 +64,8 @@ namespace ui {
 
 namespace {
 
+bool g_multi_threaded_message_loop = false;
+
 // Singleton OzonePlatform implementation for X11 platform.
 class OzonePlatformX11 : public OzonePlatform,
                          public OSExchangeDataProviderFactoryOzone {
@@ -266,7 +268,15 @@ class OzonePlatformX11 : public OzonePlatform,
     TouchFactory::SetTouchDeviceListFromCommandLine();
 
 #if BUILDFLAG(USE_GTK)
-    linux_ui_delegate_ = std::make_unique<LinuxUiDelegateX11>();
+    // Not creating the LinuxUiDelegateX11 will disable creation of GtkUi
+    // (interface to GTK desktop features) and cause ui::GetDefaultLinuxUi()
+    // (and related functions) to return nullptr. We can't use GtkUi in
+    // combination with multi-threaded-message-loop because Chromium's GTK
+    // implementation doesn't use GDK threads. Light/dark theme changes will
+    // still be detected via DarkModeManagerLinux.
+    if (!g_multi_threaded_message_loop) {
+      linux_ui_delegate_ = std::make_unique<LinuxUiDelegateX11>();
+    }
 #endif
 
     menu_utils_ = std::make_unique<X11MenuUtils>();
@@ -365,4 +375,8 @@ OzonePlatform* CreateOzonePlatformX11() {
   return new OzonePlatformX11;
 }
 
+void SetMultiThreadedMessageLoopX11() {
+  g_multi_threaded_message_loop = true;
+}
+
 }  // namespace ui
diff --git ui/ozone/platform/x11/ozone_platform_x11.h ui/ozone/platform/x11/ozone_platform_x11.h
index fd71ca6c81b7a75a37276c75c54d2f48ee49d083..f1b7464b71e9dc194f1a35b585fdd6fef44d6a81 100644
--- ui/ozone/platform/x11/ozone_platform_x11.h
+++ ui/ozone/platform/x11/ozone_platform_x11.h
@@ -5,6 +5,8 @@
 #ifndef UI_OZONE_PLATFORM_X11_OZONE_PLATFORM_X11_H_
 #define UI_OZONE_PLATFORM_X11_OZONE_PLATFORM_X11_H_
 
+#include "base/component_export.h"
+
 namespace ui {
 
 class OzonePlatform;
@@ -12,6 +14,9 @@ class OzonePlatform;
 // Constructor hook for use in ozone_platform_list.cc
 OzonePlatform* CreateOzonePlatformX11();
 
+// Indicate that CEF is using multi-threaded-message-loop.
+COMPONENT_EXPORT(OZONE) void SetMultiThreadedMessageLoopX11();
+
 }  // namespace ui
 
 #endif  // UI_OZONE_PLATFORM_X11_OZONE_PLATFORM_X11_H_
